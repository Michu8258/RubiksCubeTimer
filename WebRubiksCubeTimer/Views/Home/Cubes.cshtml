@await Component.InvokeAsync("Sidebar", new SidebarViewModel())

<div id="CubesFilterModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h6 class="modal-title">Filter cubes</h6>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label>Category (contains)</label>
                    <input type="text" class="form-control" id="CategoryFilter" />
                </div>
                <div class="form-group">
                    <label>Manufacturer name (contains)</label>
                    <input type="text" class="form-control" id="ManufacturerFilter" />
                </div>
                <div class="form-group">
                    <label>Model name (contains)</label>
                    <input type="text" class="form-control" id="ModelNameFilter" />
                </div>
                <div class="mt-3">
                    <button id="ResetFiltersButton" type="button" class="btn btn-sm btn-danger text-white">Reset all filters</button>
                </div>
            </div>
            <div class="modal-footer">
                <button id="UpdateFiltersButton" type="button" class="btn btn-sm btn-dark" data-dismiss="modal">Update filters</button>
                <button type="button" class="btn btn-sm btn-secondary" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

<div class="page-content">
    <div class="content-margin-sidebar">
        <h4>Defined cubes explorer</h4>
        <table class="table table-sm table-bordered table-striped">
            <thead class="thead-dark">
                <tr>
                    <th class="align-middl col-narrow">No</th>
                    <th class="align-middl">Category</th>
                    <th class="align-middl">Manufacturer</th>
                    <th class="align-middl">Model name</th>
                    <th class="align-middl">Plastic colour</th>
                    <th class="align-middl">Rating (1-5)</th>
                    <th class="align-middl">Release year</th>
                    <th class="align-middl">WCA permission</th>
                </tr>
            </thead>
            <tbody id="CubesTable">
            </tbody>
        </table>
        <div class="d-flex justify-content-end">
            @if (User.Identity.IsAuthenticated)
            {
                <a asp-controller="Requests" asp-action="CreateRequest" class="btn btn-sm btn-dark text-white mx-2">Write cube add request</a>
            }
            <button type="button" id="OpenFiltersButton" class="btn btn-sm btn-dark text-white">Filter cubes</button>
        </div>
    </div>
</div>

@await Component.InvokeAsync("Toast")

<div class="content-margin-sidebar d-flex justify-content-center mb-3" id="PaginationButtons">
</div>

@section scripts{
    <environment names="Development">
        <script src="~/JS/Pagination.js" asp-append-version="true"></script>
        <script src="~/JS/Sidebar.js" asp-append-version="true"></script>
        <script src="~/JS/CubesExplorer.js" asp-append-version="true"></script>
    </environment>
    <environment names="Production">
        <script src="~/JS/Pagination.min.js" asp-append-version="true"></script>
        <script src="~/JS/Sidebar.min.js" asp-append-version="true"></script>
        <script src="~/JS/CubesExplorer.min.js" asp-append-version="true"></script>
    </environment>
}
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ArgumentRange" xml:space="preserve">
    <value>{0} should be grather or equalt to {1}, and less than or equal to {2}.</value>
  </data>
  <data name="CategoryAddAddFail" xml:space="preserve">
    <value>Failed to add category {0}.</value>
  </data>
  <data name="CategoryAddOptionsSetFail" xml:space="preserve">
    <value>Failed to add category options set for category {0}.</value>
  </data>
  <data name="CategoryAlreadyExists" xml:space="preserve">
    <value>Category {0} already exists.</value>
  </data>
  <data name="CategoryAlreadyHasScramble" xml:space="preserve">
    <value>Selected category already has assigned scramble definition.</value>
  </data>
  <data name="CategoryCannotDelete" xml:space="preserve">
    <value>Category {0} cannot be deleted because it is used in at least one cube definition.</value>
  </data>
  <data name="CategoryDeleteFail" xml:space="preserve">
    <value>Category deletion failed.</value>
  </data>
  <data name="CategoryModificationFailed" xml:space="preserve">
    <value>Category modificationFailed.</value>
  </data>
  <data name="CategoryNotExist" xml:space="preserve">
    <value>Such category does not exist.</value>
  </data>
  <data name="CategoryOptionAddFailed" xml:space="preserve">
    <value>Couldn't add category option {0}.</value>
  </data>
  <data name="CategoryOptionAlreadyExists" xml:space="preserve">
    <value>Category option {0} already exists.</value>
  </data>
  <data name="CategoryOptionCannotDelete" xml:space="preserve">
    <value>Category option {0} cannot be deleted, because it is used by options set of at least one category.</value>
  </data>
  <data name="CategoryOptionDeleteFailed" xml:space="preserve">
    <value>Category option {0} deletion failed.</value>
  </data>
  <data name="CategoryOptionNotExist" xml:space="preserve">
    <value>Category option {0} does not exist.</value>
  </data>
  <data name="CategoryOptionNotInCategory" xml:space="preserve">
    <value>Selected category option is not suitable for selected category.</value>
  </data>
  <data name="CategoryOptionUpdateFailed" xml:space="preserve">
    <value>Category option modification failed.</value>
  </data>
  <data name="CubeAddedSuccessfully" xml:space="preserve">
    <value>New cube addedd successfully.</value>
  </data>
  <data name="CubeAddFailed" xml:space="preserve">
    <value>New cube adding failed.</value>
  </data>
  <data name="CubeAlreadyInCollection" xml:space="preserve">
    <value>This cube is already in your collection.</value>
  </data>
  <data name="CubeCannotDelete" xml:space="preserve">
    <value>Selected cube cannot be deleted, because it is used in at least one rating, cubes collections or series.</value>
  </data>
  <data name="CubeCollectionAddFailed" xml:space="preserve">
    <value>Failed to add cube to your cubes colection.</value>
  </data>
  <data name="CubeCollectionDeleteAllFailed" xml:space="preserve">
    <value>Failed to delete full collection of cubes of single user.</value>
  </data>
  <data name="CubeCollectionDeleteFailed" xml:space="preserve">
    <value>Failed to delete cube from your cubes collection.</value>
  </data>
  <data name="CubeCollectionUpdateFailed" xml:space="preserve">
    <value>Failed to update cubes collection: {0} error(s).</value>
  </data>
  <data name="CubeDeletedSuccessfully" xml:space="preserve">
    <value>Cube deleted successfully.</value>
  </data>
  <data name="CubeDeleteFailed" xml:space="preserve">
    <value>Cube deletion failed.</value>
  </data>
  <data name="CubeExists" xml:space="preserve">
    <value>Cube with passed parameters already exists.</value>
  </data>
  <data name="CubeNotExists" xml:space="preserve">
    <value>Specfied cube does not exist.</value>
  </data>
  <data name="CubeNotInCollection" xml:space="preserve">
    <value>There is no such cube in your cubes collection.</value>
  </data>
  <data name="CubeNotRated" xml:space="preserve">
    <value>Cube not rated before. Please add new rating first.</value>
  </data>
  <data name="CuberatingDeletedSuccessfully" xml:space="preserve">
    <value>Cube rating deleted successfully.</value>
  </data>
  <data name="CubeRatingDeletionFailed" xml:space="preserve">
    <value>Cube rating deletion failed.</value>
  </data>
  <data name="CubeRatingUpdateFailed" xml:space="preserve">
    <value>Cube rating update failed.</value>
  </data>
  <data name="CubeRatingUpdateSuccessfull" xml:space="preserve">
    <value>Cube rating successfully updated.</value>
  </data>
  <data name="CubeUpdateFailed" xml:space="preserve">
    <value>Cube definition update failed.</value>
  </data>
  <data name="CubeUpdateSuccessfull" xml:space="preserve">
    <value>Cube definition updated successfully.</value>
  </data>
  <data name="DeleteUserAllRatings" xml:space="preserve">
    <value>Deletion of all ratings of user {0} failed.</value>
  </data>
  <data name="DeletingUserSerieFailed" xml:space="preserve">
    <value>Deleting all series data of user {0} failed with {1} errors. Total series amount: {2}.</value>
  </data>
  <data name="ManufacturerAddedSuccessfully" xml:space="preserve">
    <value>Manufacturer {0} added successfully.</value>
  </data>
  <data name="ManufacturerAddFailed" xml:space="preserve">
    <value>Manufacturer {0} adding failed.</value>
  </data>
  <data name="ManufacturerDeletionFailed" xml:space="preserve">
    <value>Manufacturer {0} successfully deleted.</value>
  </data>
  <data name="ManufacturerDeletionSuccessfull" xml:space="preserve">
    <value>Manufacturer {0} deleted successfully.</value>
  </data>
  <data name="ManufacturerExists" xml:space="preserve">
    <value>Manufacturer {0} already exists.</value>
  </data>
  <data name="ManufacturerInUse" xml:space="preserve">
    <value>Manufacturer {0} cannot be deleted because it is used in at least one cube definition.</value>
  </data>
  <data name="ManufacturerNotDefined" xml:space="preserve">
    <value>Manufacturer {0} is not defined.</value>
  </data>
  <data name="ManufacturerUpdatedSuccessfully" xml:space="preserve">
    <value>Manufacturer {0} has been updated successfully.</value>
  </data>
  <data name="ManufacturerUpdateFailed" xml:space="preserve">
    <value>Manufacturer {0} update failed.</value>
  </data>
  <data name="MovesCollectionContainsDuplicates" xml:space="preserve">
    <value>Moves list cannot contain duplicated moves.</value>
  </data>
  <data name="NullArgument" xml:space="preserve">
    <value>Provided input data is invalid.</value>
  </data>
  <data name="PlasticColorAddFail" xml:space="preserve">
    <value>Adding new plastic color failed.</value>
  </data>
  <data name="PlasticColorAddSuccessfull" xml:space="preserve">
    <value>New color {0} added successfully.</value>
  </data>
  <data name="PlasticColorDeleteFailed" xml:space="preserve">
    <value>Deleting plastic color {0} failed.</value>
  </data>
  <data name="PlasticColorDeletionSuccessfull" xml:space="preserve">
    <value>Plastic color {0} successfully deleted.</value>
  </data>
  <data name="PlasticColorExists" xml:space="preserve">
    <value>Plastic color with name {0} already exists.</value>
  </data>
  <data name="PlasticColorInUse" xml:space="preserve">
    <value>Plastic color {0} cannot be deleted, because it is used in at least one cube defiinition.</value>
  </data>
  <data name="PlasticColorNotDefined" xml:space="preserve">
    <value>Plastic color {0} is not defined.</value>
  </data>
  <data name="RatingAddedSuccessfully" xml:space="preserve">
    <value>Cube rating added successfully.</value>
  </data>
  <data name="RatingAddFailed" xml:space="preserve">
    <value>Adding cube rating failed.</value>
  </data>
  <data name="RatingAlreadyMade" xml:space="preserve">
    <value>User already added rating for this cube.</value>
  </data>
  <data name="ScrambleCanotDeleteDefault" xml:space="preserve">
    <value>Cannot delete default scramble.</value>
  </data>
  <data name="ScrambleDefaultSetFail" xml:space="preserve">
    <value>Failed to set this scramble as default.</value>
  </data>
  <data name="ScrambleDefaultsResetFailed" xml:space="preserve">
    <value>Failed to reset default scramble.</value>
  </data>
  <data name="ScrambleDefinitionAddFailed" xml:space="preserve">
    <value>Failed to create scramble definition.</value>
  </data>
  <data name="ScrambleDefinitionDeletionFailed" xml:space="preserve">
    <value>Failed to delete scramble definition.</value>
  </data>
  <data name="ScrambleDoesNotExist" xml:space="preserve">
    <value>Scramble definition that you are traing to modifiy moves of does not exist.</value>
  </data>
  <data name="ScrambleMovesAddError" xml:space="preserve">
    <value>Couldn't add new all new moves to scramble definition.</value>
  </data>
  <data name="ScrambleMovesAmountUpdateError" xml:space="preserve">
    <value>Updating scramble moves amount failed.</value>
  </data>
  <data name="ScrambleMovesDeleteError" xml:space="preserve">
    <value>Couldn't delete previous scramble moves.</value>
  </data>
  <data name="ScrambleNameExists" xml:space="preserve">
    <value>Scramble with name {0} already exists for selected category.</value>
  </data>
  <data name="ScrambleNoMove" xml:space="preserve">
    <value>List of scramble moves cannot be empty.</value>
  </data>
  <data name="SerieAlreadyFinished" xml:space="preserve">
    <value>Cannot add new solve to already finished serie.</value>
  </data>
  <data name="SerieCreatingError" xml:space="preserve">
    <value>Error when tried to create serie.</value>
  </data>
  <data name="SerieDeletionFailed" xml:space="preserve">
    <value>Failed to delete selected serie.</value>
  </data>
  <data name="SerieDoesNotExist" xml:space="preserve">
    <value>Such serie does not exist.</value>
  </data>
  <data name="SerieFinishUpdateFailed" xml:space="preserve">
    <value>Failed to update series finished condition.</value>
  </data>
  <data name="SeriesBelongsToDiffuser" xml:space="preserve">
    <value>This series belongs to different user.</value>
  </data>
  <data name="SeriesUpdateFailed" xml:space="preserve">
    <value>Failed to update series data after adding new solve.</value>
  </data>
  <data name="SolveAddFailed" xml:space="preserve">
    <value>Adding new solve to series failed.</value>
  </data>
  <data name="SolveBelowAcceptableTime" xml:space="preserve">
    <value>Your time {0} is shorter than acceptable time for this category, wchich is  {1}.</value>
  </data>
  <data name="SolvedeleteFailed" xml:space="preserve">
    <value>Failed to delete solve from series.</value>
  </data>
  <data name="SolveDoesNotExist" xml:space="preserve">
    <value>Such solve does not exist.</value>
  </data>
  <data name="SolveUpdateFailed" xml:space="preserve">
    <value>Failed to update solve definition.</value>
  </data>
  <data name="UpdateScrambleDefinitionFailed" xml:space="preserve">
    <value>Failed to update selected scramble definition.</value>
  </data>
</root>
// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TimerDataBase.DataBaseContext;

namespace TimerDataBase.Migrations
{
    [DbContext(typeof(TimerDBContext))]
    [Migration("20200511184038_AddScrambleColumnToSolvesTable")]
    partial class AddScrambleColumnToSolvesTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TimerDataBase.TableModels.Category", b =>
                {
                    b.Property<int>("Identity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Identity");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("TimerDataBase.TableModels.CategoryOption", b =>
                {
                    b.Property<int>("Identity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Identity");

                    b.ToTable("CategoryOptions");
                });

            modelBuilder.Entity("TimerDataBase.TableModels.CategoryOptionsSet", b =>
                {
                    b.Property<int>("Identity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryIdentity")
                        .HasColumnType("int");

                    b.Property<int?>("OptionIdentity")
                        .HasColumnType("int");

                    b.HasKey("Identity");

                    b.HasIndex("CategoryIdentity");

                    b.HasIndex("OptionIdentity");

                    b.ToTable("CategoryoptionsSets");
                });

            modelBuilder.Entity("TimerDataBase.TableModels.Cube", b =>
                {
                    b.Property<long>("Identity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryIdentity")
                        .HasColumnType("int");

                    b.Property<int?>("ManufacturerIdentity")
                        .HasColumnType("int");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PlasticColorIdentity")
                        .HasColumnType("int");

                    b.Property<long>("RatesAmount")
                        .HasColumnType("bigint");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<int>("ReleaseYear")
                        .HasColumnType("int");

                    b.Property<bool>("WcaPermission")
                        .HasColumnType("bit");

                    b.HasKey("Identity");

                    b.HasIndex("CategoryIdentity");

                    b.HasIndex("ManufacturerIdentity");

                    b.HasIndex("PlasticColorIdentity");

                    b.ToTable("Cubes");
                });

            modelBuilder.Entity("TimerDataBase.TableModels.CubeRating", b =>
                {
                    b.Property<long>("Identity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CubeIdentity")
                        .HasColumnType("bigint");

                    b.Property<int>("RateValue")
                        .HasColumnType("int");

                    b.Property<bool>("Rated")
                        .HasColumnType("bit");

                    b.Property<string>("UserIdentity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Identity");

                    b.HasIndex("CubeIdentity");

                    b.ToTable("CubeRatings");
                });

            modelBuilder.Entity("TimerDataBase.TableModels.CubesCollection", b =>
                {
                    b.Property<long>("Identity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CubeIdentity")
                        .HasColumnType("bigint");

                    b.Property<string>("UserIdentity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Identity");

                    b.HasIndex("CubeIdentity");

                    b.ToTable("CubesCollections");
                });

            modelBuilder.Entity("TimerDataBase.TableModels.Manufacturer", b =>
                {
                    b.Property<int>("Identity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FoundationYear")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Identity");

                    b.ToTable("Manufacturers");
                });

            modelBuilder.Entity("TimerDataBase.TableModels.PlasticColor", b =>
                {
                    b.Property<int>("Identity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Identity");

                    b.ToTable("PlasticColors");
                });

            modelBuilder.Entity("TimerDataBase.TableModels.Scramble", b =>
                {
                    b.Property<long>("Identity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AllowRegenerate")
                        .HasColumnType("bit");

                    b.Property<int>("CategoryIdentity")
                        .HasColumnType("int");

                    b.Property<bool>("Default")
                        .HasColumnType("bit");

                    b.Property<int>("DefaultScrambleLength")
                        .HasColumnType("int");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<bool>("EliminateDuplicates")
                        .HasColumnType("bit");

                    b.Property<string>("FrontColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaximumScrambleLength")
                        .HasColumnType("int");

                    b.Property<int>("MinimumScrambleLength")
                        .HasColumnType("int");

                    b.Property<int>("MovesAmount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TopColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Identity");

                    b.HasIndex("CategoryIdentity");

                    b.ToTable("Scrambles");
                });

            modelBuilder.Entity("TimerDataBase.TableModels.ScrambleMove", b =>
                {
                    b.Property<long>("Identity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Move")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ScrambleIdentity")
                        .HasColumnType("bigint");

                    b.HasKey("Identity");

                    b.HasIndex("ScrambleIdentity");

                    b.ToTable("ScrambleMoves");
                });

            modelBuilder.Entity("TimerDataBase.TableModels.Serie", b =>
                {
                    b.Property<long>("Identity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AtLeastOneDNF")
                        .HasColumnType("bit");

                    b.Property<TimeSpan>("AverageOf5")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("AverageTime")
                        .HasColumnType("time");

                    b.Property<long?>("CubeIdentity")
                        .HasColumnType("bigint");

                    b.Property<TimeSpan>("LongestResult")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("MeanOf3")
                        .HasColumnType("time");

                    b.Property<bool>("SerieFinished")
                        .HasColumnType("bit");

                    b.Property<int?>("SerieOptionIdentity")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("ShortestResult")
                        .HasColumnType("time");

                    b.Property<int>("SolvesAmount")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserIdentity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Identity");

                    b.HasIndex("CubeIdentity");

                    b.HasIndex("SerieOptionIdentity");

                    b.ToTable("Series");
                });

            modelBuilder.Entity("TimerDataBase.TableModels.Solve", b =>
                {
                    b.Property<long>("Identity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DNF")
                        .HasColumnType("bit");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<DateTime>("FinishTimeSpan")
                        .HasColumnType("datetime2");

                    b.Property<bool>("PenaltyTwoSeconds")
                        .HasColumnType("bit");

                    b.Property<string>("Scramble")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("SerieIdentity")
                        .HasColumnType("bigint");

                    b.HasKey("Identity");

                    b.HasIndex("SerieIdentity");

                    b.ToTable("Solves");
                });

            modelBuilder.Entity("TimerDataBase.TableModels.CategoryOptionsSet", b =>
                {
                    b.HasOne("TimerDataBase.TableModels.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryIdentity");

                    b.HasOne("TimerDataBase.TableModels.CategoryOption", "Option")
                        .WithMany()
                        .HasForeignKey("OptionIdentity");
                });

            modelBuilder.Entity("TimerDataBase.TableModels.Cube", b =>
                {
                    b.HasOne("TimerDataBase.TableModels.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryIdentity");

                    b.HasOne("TimerDataBase.TableModels.Manufacturer", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerIdentity");

                    b.HasOne("TimerDataBase.TableModels.PlasticColor", "PlasticColor")
                        .WithMany()
                        .HasForeignKey("PlasticColorIdentity");
                });

            modelBuilder.Entity("TimerDataBase.TableModels.CubeRating", b =>
                {
                    b.HasOne("TimerDataBase.TableModels.Cube", "Cube")
                        .WithMany()
                        .HasForeignKey("CubeIdentity");
                });

            modelBuilder.Entity("TimerDataBase.TableModels.CubesCollection", b =>
                {
                    b.HasOne("TimerDataBase.TableModels.Cube", "Cube")
                        .WithMany()
                        .HasForeignKey("CubeIdentity");
                });

            modelBuilder.Entity("TimerDataBase.TableModels.Scramble", b =>
                {
                    b.HasOne("TimerDataBase.TableModels.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryIdentity")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TimerDataBase.TableModels.ScrambleMove", b =>
                {
                    b.HasOne("TimerDataBase.TableModels.Scramble", "Scramble")
                        .WithMany()
                        .HasForeignKey("ScrambleIdentity")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TimerDataBase.TableModels.Serie", b =>
                {
                    b.HasOne("TimerDataBase.TableModels.Cube", "Cube")
                        .WithMany()
                        .HasForeignKey("CubeIdentity");

                    b.HasOne("TimerDataBase.TableModels.CategoryOption", "SerieOption")
                        .WithMany()
                        .HasForeignKey("SerieOptionIdentity");
                });

            modelBuilder.Entity("TimerDataBase.TableModels.Solve", b =>
                {
                    b.HasOne("TimerDataBase.TableModels.Serie", "Serie")
                        .WithMany()
                        .HasForeignKey("SerieIdentity");
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TimerRequestsDataBase.DataBaseContext;

namespace TimerRequestsDataBase.Migrations
{
    [DbContext(typeof(RequestsDBContext))]
    [Migration("20200414140946_MaxMessageLengthSourceChange")]
    partial class MaxMessageLengthSourceChange
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TimerRequestsDataBase.TableModels.Request", b =>
                {
                    b.Property<long>("Identity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CaseClosed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<bool>("NewChangesByAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("NewChangesByUser")
                        .HasColumnType("bit");

                    b.Property<bool>("PrivateRequest")
                        .HasColumnType("bit");

                    b.Property<int>("RepliesAmount")
                        .HasColumnType("int");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("UserIdentity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Identity");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("TimerRequestsDataBase.TableModels.Response", b =>
                {
                    b.Property<long>("Identity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<long?>("RequestIdentity")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ResponseTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserIdentity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Identity");

                    b.HasIndex("RequestIdentity");

                    b.ToTable("Responses");
                });

            modelBuilder.Entity("TimerRequestsDataBase.TableModels.Response", b =>
                {
                    b.HasOne("TimerRequestsDataBase.TableModels.Request", "Request")
                        .WithMany()
                        .HasForeignKey("RequestIdentity");
                });
#pragma warning restore 612, 618
        }
    }
}
